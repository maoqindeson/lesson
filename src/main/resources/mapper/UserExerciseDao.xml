<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.generator.dao.UserExerciseDao">
    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.generator.entity.UserExerciseEntity" id="userExerciseMap">
        <result property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="exerciseId" column="exercise_id"/>
        <result property="content" column="content"/>
        <result property="deletedAt" column="deleted_at"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="hasComplete" column="has_complete"/>
        <result property="hasNotice" column="has_notice"/>
    </resultMap>
    <!--countNoticeList-->
    <select id="countNoticeList" resultMap="userExerciseMap">
select GROUP_CONCAT(distinct org_id) as noticeOrgId ,username ,exercise_id ,content, created_at,updated_at,deleted_at
 from tb_user_exercise where has_complete = 0 and has_notice = 0  GROUP BY username ;
    </select>
    <update id="updateHasNotice">
      update tb_user_exercise set has_notice = #{hasNotice},updated_at = now() where id = #{id};
    </update>
</mapper>